<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="nl.itvitae.specops.SpecopsApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-03-13T10:53:38" hostname="LAPTOP-THJPJO0H" time="0.675">
  <properties/>
  <testcase name="contextLoads()" classname="nl.itvitae.specops.SpecopsApplicationTests" time="0.675"/>
  <system-out><![CDATA[11:53:29.721 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [nl.itvitae.specops.SpecopsApplicationTests]: SpecopsApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
11:53:29.856 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration nl.itvitae.specops.SpecopsApplication for test class nl.itvitae.specops.SpecopsApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-03-13T11:53:30.371+01:00  INFO 24280 --- [    Test worker] n.i.specops.SpecopsApplicationTests      : Starting SpecopsApplicationTests using Java 21.0.1 with PID 24280 (started by Psrdi in C:\Users\Psrdi\Desktop\specops\specops-backend)
2024-03-13T11:53:30.373+01:00  INFO 24280 --- [    Test worker] n.i.specops.SpecopsApplicationTests      : No active profile set, falling back to 1 default profile: "default"
2024-03-13T11:53:31.273+01:00  INFO 24280 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-13T11:53:31.379+01:00  INFO 24280 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 91 ms. Found 5 JPA repository interfaces.
2024-03-13T11:53:32.076+01:00  INFO 24280 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-13T11:53:32.186+01:00  INFO 24280 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-03-13T11:53:32.259+01:00  INFO 24280 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-13T11:53:32.684+01:00  INFO 24280 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-13T11:53:32.739+01:00  INFO 24280 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-13T11:53:33.090+01:00  INFO 24280 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ae2702a
2024-03-13T11:53:33.093+01:00  INFO 24280 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-13T11:53:33.157+01:00  WARN 24280 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-03-13T11:53:34.519+01:00  INFO 24280 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: alter table if exists departments drop constraint if exists FKhbohrca6v9p3bh97spt5lvxb7
Hibernate: alter table if exists task_executions drop constraint if exists FKcndm55t0ss7rwgfws9k0clcft
Hibernate: alter table if exists task_executions drop constraint if exists FK3icsi0hie9f2d1ifbraqechvq
Hibernate: alter table if exists task_plannings drop constraint if exists FK1b92o49inrh8uv774iar5jhl6
Hibernate: alter table if exists tasks drop constraint if exists FKo4pkughwybhuhcrjkqs5307kc
Hibernate: alter table if exists users drop constraint if exists FKsbg59w8q63i0oo53rlgvlcnjq
Hibernate: drop table if exists departments cascade
Hibernate: drop table if exists task_executions cascade
Hibernate: drop table if exists task_plannings cascade
Hibernate: drop table if exists tasks cascade
Hibernate: drop table if exists users cascade
Hibernate: create table departments (department_head_id uuid, id uuid not null, name varchar(255), primary key (id))
Hibernate: create table task_executions (execution_date date, id uuid not null, task_id uuid, user_id uuid, primary key (id))
Hibernate: create table task_plannings (interval integer not null, timeframe integer not null, department_id uuid, id uuid not null, name varchar(255), primary key (id))
Hibernate: create table tasks (deadline date, id uuid not null, task_planning_id uuid, primary key (id))
Hibernate: create table users (department_id uuid, id uuid not null, employee_name varchar(255), password varchar(255), username varchar(255), primary key (id))
Hibernate: alter table if exists departments add constraint FKhbohrca6v9p3bh97spt5lvxb7 foreign key (department_head_id) references users
Hibernate: alter table if exists task_executions add constraint FKcndm55t0ss7rwgfws9k0clcft foreign key (task_id) references tasks
Hibernate: alter table if exists task_executions add constraint FK3icsi0hie9f2d1ifbraqechvq foreign key (user_id) references users
Hibernate: alter table if exists task_plannings add constraint FK1b92o49inrh8uv774iar5jhl6 foreign key (department_id) references departments
Hibernate: alter table if exists tasks add constraint FKo4pkughwybhuhcrjkqs5307kc foreign key (task_planning_id) references task_plannings
Hibernate: alter table if exists users add constraint FKsbg59w8q63i0oo53rlgvlcnjq foreign key (department_id) references departments
2024-03-13T11:53:34.653+01:00  INFO 24280 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-13T11:53:35.239+01:00  WARN 24280 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-13T11:53:35.266+01:00  WARN 24280 --- [    Test worker] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 624f880c-9fdd-4667-891d-941c4b05a789

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-03-13T11:53:35.685+01:00  INFO 24280 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4246f904, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b01b3f8, org.springframework.security.web.context.SecurityContextHolderFilter@6c4e11d0, org.springframework.security.web.header.HeaderWriterFilter@44103266, org.springframework.web.filter.CorsFilter@27c49f54, org.springframework.security.web.authentication.logout.LogoutFilter@7212b28e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4cf1ec2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3284de45, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5390862e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69efdfd9, org.springframework.security.web.access.ExceptionTranslationFilter@580c4c0b, org.springframework.security.web.access.intercept.AuthorizationFilter@23b3afb4]
2024-03-13T11:53:36.127+01:00  INFO 24280 --- [    Test worker] n.i.specops.SpecopsApplicationTests      : Started SpecopsApplicationTests in 6.055 seconds (process running for 7.859)
Hibernate: select count(*) from users u1_0
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: insert into users (department_id,employee_name,password,username,id) values (?,?,?,?,?)
Hibernate: select count(*) from departments d1_0
Hibernate: select u1_0.id,u1_0.department_id,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
Hibernate: insert into departments (department_head_id,name,id) values (?,?,?)
Hibernate: select u1_0.id,u1_0.department_id,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
Hibernate: insert into departments (department_head_id,name,id) values (?,?,?)
Hibernate: select u1_0.id,u1_0.department_id,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
Hibernate: insert into departments (department_head_id,name,id) values (?,?,?)
Hibernate: select u1_0.id,u1_0.department_id,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
Hibernate: insert into departments (department_head_id,name,id) values (?,?,?)
Hibernate: select u1_0.id,u1_0.department_id,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0
Hibernate: select d1_0.id,d1_0.department_head_id,d1_0.name from departments d1_0
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: update users set department_id=?,employee_name=?,password=?,username=? where id=?
Hibernate: select count(*) from tasks t1_0
Hibernate: select d1_0.id,d1_0.department_head_id,d1_0.name from departments d1_0 where d1_0.name=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: insert into task_plannings (department_id,interval,name,timeframe,id) values (?,?,?,?,?)
Hibernate: insert into tasks (deadline,task_planning_id,id) values (?,?,?)
Hibernate: select d1_0.id,d1_0.department_head_id,d1_0.name from departments d1_0 where d1_0.name=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: select d1_0.id,dh1_0.id,d2_0.id,d2_0.department_head_id,d2_0.name,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name from departments d1_0 left join users dh1_0 on dh1_0.id=d1_0.department_head_id left join departments d2_0 on d2_0.id=dh1_0.department_id where d1_0.id=?
Hibernate: insert into task_plannings (department_id,interval,name,timeframe,id) values (?,?,?,?,?)
Hibernate: insert into tasks (deadline,task_planning_id,id) values (?,?,?)
Hibernate: select d1_0.id,d1_0.department_head_id,d1_0.name from departments d1_0 where d1_0.name=?
Hibernate: select u1_0.id,d1_0.id,dh1_0.id,dh1_0.department_id,dh1_0.employee_name,dh1_0.password,dh1_0.username,d1_0.name,u1_0.employee_name,u1_0.password,u1_0.username from users u1_0 left join departments d1_0 on d1_0.id=u1_0.department_id left join users dh1_0 on dh1_0.id=d1_0.department_head_id where u1_0.id=?
Hibernate: insert into task_plannings (department_id,interval,name,timeframe,id) values (?,?,?,?,?)
Hibernate: insert into tasks (deadline,task_planning_id,id) values (?,?,?)
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\Psrdi\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.11\f9cb566608fbac6bc7bf54901a7aa11543a989ee\byte-buddy-agent-1.14.11.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
